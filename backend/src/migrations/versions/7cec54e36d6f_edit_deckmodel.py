"""Edit deckModel

Revision ID: 7cec54e36d6f
Revises: e4c3ed57bd71
Create Date: 2025-07-10 13:57:59.500933

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7cec54e36d6f'
down_revision: Union[str, None] = 'e4c3ed57bd71'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('decks', 'created_at',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               existing_nullable=False,
               postgresql_using="created_at::timestamp without time zone") 

    op.alter_column('decks', 'updated_at',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               existing_nullable=False,
               postgresql_using="updated_at::timestamp without time zone") 

    op.alter_column('decks', 'difficulty',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False,
               postgresql_using="difficulty::integer")

    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default='NOW()',
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text("'2025-07-07 15:23:41.141765'::timestamp without time zone"),
               existing_nullable=False)

    op.alter_column('decks', 'difficulty',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               postgresql_using="difficulty::varchar")

    op.alter_column('decks', 'updated_at',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               postgresql_using="updated_at::varchar")

    op.alter_column('decks', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               postgresql_using="created_at::varchar")
    # ### end Alembic commands ###
