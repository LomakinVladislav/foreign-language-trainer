"""delete userdecks entity

Revision ID: 925317b7fdf8
Revises: 16c79972a9ee
Create Date: 2025-07-18 11:32:09.098111

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '925317b7fdf8'
down_revision: Union[str, None] = '16c79972a9ee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userdecks')
    op.alter_column('reset_passwords', 'reset_token_expires',
               existing_type=postgresql.TIMESTAMP(),
               server_default=None,
               existing_nullable=True)
    op.drop_constraint('reset_passwords_user_id_fkey', 'reset_passwords', type_='foreignkey')
    op.create_foreign_key('reset_passwords_user_id_fkey', 'reset_passwords', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'reset_passwords', type_='foreignkey')
    op.create_foreign_key('reset_passwords_user_id_fkey', 'reset_passwords', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('reset_passwords', 'reset_token_expires',
               existing_type=postgresql.TIMESTAMP(),
               server_default=sa.text('now()'),
               existing_nullable=True)
    op.create_table('userdecks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('deck_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('added_at', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('progress', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['deck_id'], ['decks.id'], name='userdecks_deck_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='userdecks_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='userdecks_pkey')
    )
    # ### end Alembic commands ###
